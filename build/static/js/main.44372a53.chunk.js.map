{"version":3,"sources":["components/ScoreBoard.tsx","components/HistoryModalTable.tsx","components/Header.tsx","components/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ScoreBoard","props","players","onDelete","onSubtract","onAdd","onAllIn","onPlayerWin","columns","key","name","fieldName","minWidth","maxWidth","onRender","item","Stack","horizontal","verticalFill","verticalAlign","ActionButton","iconProps","iconName","onClick","_","Text","tokens","childrenGap","horizontalAlign","coins","subtractedCoins","disabled","isAllInClicked","text","style","color","DetailsList","isHeaderVisible","items","selectionMode","HistoryModalTable","playersHistory","map","p","length","textAlign","fontWeight","variant","Header","onAddPlayer","setAllInCoins","totalRoundCoins","baseCoins","roundNumber","allInCoins","historyItems","useState","addPlayerValue","setAddPlayerValue","isHistoryModalOpen","setIsHistoryModalOpen","TextField","placeholder","value","onChange","v","DefaultButton","label","toString","Number","block","Button","Modal","isOpen","onDismiss","Game","setPlayers","setTotalRoundCoins","setBaseCoins","setRoundNumber","setHistoryItems","concat","history","Separator","margin","slice","splice","findIndex","updatedPlayers","newPlayer","find","val","updatedHistory","historyObject","push","n","c","App","Boolean","window","location","hostname","match","initializeIcons","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44372a53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  DetailsList,\r\n  IColumn,\r\n  ActionButton\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport type Player = {\r\n  name: string;\r\n  coins: number;\r\n  subtractedCoins:number;\r\n  isAllInClicked?: boolean;\r\n  isKing?: boolean;\r\n  isCoze?: boolean;\r\n  history: number[];\r\n};\r\n\r\nexport type ScoreBoardProps = {\r\n  players: Player[];\r\n  onDelete: (name: string) => void;\r\n  onSubtract: (name: string) => void;\r\n  onAdd: (name: string) => void;\r\n  onAllIn: (name: string) => void;\r\n  onPlayerWin: (name: string) => void;\r\n};\r\n\r\nexport const ScoreBoard = (props: ScoreBoardProps) => {\r\n  const { players, onDelete, onSubtract,onAdd, onAllIn, onPlayerWin } = props;\r\n\r\n  const columns: IColumn[] = [\r\n    {\r\n      key: \"playerName\",\r\n      name: \"Name\",\r\n      fieldName: \"name\",\r\n      minWidth: 50,\r\n      maxWidth:150,\r\n      onRender: (item: any) => (\r\n        <Stack horizontal verticalFill verticalAlign=\"center\">\r\n          <ActionButton\r\n            iconProps={{ iconName: \"Delete\" }}\r\n            onClick={_ => onDelete(item.name)}\r\n          />\r\n          <Text>{item.name}</Text>\r\n        </Stack>\r\n      )\r\n    },\r\n    {\r\n      key: \"coin\",\r\n      name: \"Coins\",\r\n      fieldName: \"coins\",\r\n      minWidth: 250,\r\n      onRender: (item: any) => (\r\n        <Stack\r\n          horizontal\r\n          tokens={{ childrenGap: 2 }}\r\n          horizontalAlign=\"start\"\r\n          verticalAlign=\"center\"\r\n          verticalFill\r\n        >\r\n          <Text>{item.coins} ( {item.subtractedCoins} )</Text>\r\n          <ActionButton\r\n            iconProps={{ iconName: \"BoxSubtractSolid\" }}\r\n            onClick={_ => onSubtract(item.name)}\r\n          />\r\n          <ActionButton\r\n            iconProps={{ iconName: \"BoxAdditionSolid\" }}\r\n            onClick={_ => onAdd(item.name)}\r\n            disabled={item.subtractedCoins>=0}\r\n          />\r\n          <ActionButton\r\n            iconProps={{ iconName: \"LightningBolt\" }}\r\n            onClick={_ => {\r\n              onAllIn(item.name);\r\n            }}\r\n            disabled={item.isAllInClicked}\r\n          />\r\n          <ActionButton\r\n            text=\"Win\"\r\n            style={{ color: \"green\" }}\r\n            onClick={_ => {\r\n              onPlayerWin(item.name);\r\n            }}\r\n          />\r\n        </Stack>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return <DetailsList isHeaderVisible={false} items={players} columns={columns} selectionMode={0} />;\r\n};\r\n\r\n// <Stack\r\n//   horizontal\r\n//   verticalAlign=\"center\"\r\n//   verticalFill\r\n//   tokens={{ childrenGap: 5 }}\r\n// >\r\n//   <Persona text={name} size={PersonaSize.size56} />\r\n//   <Text variant=\"medium\">{coins}</Text>\r\n// </Stack>\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  DetailsList,\r\n  IColumn,\r\n  Text,\r\n} from \"office-ui-fabric-react\";\r\nimport { Player } from \"./ScoreBoard\";\r\nimport { HistoryItem } from \"./Header\";\r\n\r\n\r\nexport type HistoryModalTableProps = {\r\n  playersHistory: HistoryItem[];\r\n  players: Player[]\r\n};\r\n\r\nexport const HistoryModalTable = (props: HistoryModalTableProps) => {\r\n  const { playersHistory, players } = props;\r\n\r\n  const columns: IColumn[] = \r\n  players.map(p=>({\r\n        key: p.name,\r\n        name: p.name,\r\n        fieldName: p.name,\r\n        minWidth: 100,\r\n  }))\r\n\r\n  return playersHistory.length? <DetailsList items={playersHistory} columns={columns} selectionMode={0} />:<Text style={{textAlign:\"center\", fontWeight:\"bold\"}} variant=\"large\"> There is no history created yet!</Text>;\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  ActionButton,\r\n  TextField,\r\n  DefaultButton,\r\n  Modal,\r\n  Button\r\n} from \"office-ui-fabric-react\";\r\nimport { HistoryModalTable } from \"./HistoryModalTable\";\r\nimport { Player } from \"./ScoreBoard\";\r\n\r\nexport type HistoryItem = { [key: string]: number };\r\nexport type HeaderProps = {\r\n  onAddPlayer: (name: string) => void;\r\n  totalRoundCoins: number;\r\n  baseCoins: number;\r\n  roundNumber: number;\r\n  allInCoins: number;\r\n  setAllInCoins: (val: number) => void;\r\n  players: Player[];\r\n  historyItems: HistoryItem[];\r\n};\r\nexport const Header = (props: HeaderProps) => {\r\n  const {\r\n    onAddPlayer,\r\n    setAllInCoins,\r\n    totalRoundCoins,\r\n    baseCoins,\r\n    roundNumber,\r\n    allInCoins,\r\n    players,\r\n    historyItems\r\n  } = props;\r\n  const [addPlayerValue, setAddPlayerValue] = useState(\"\");\r\n  const [isHistoryModalOpen, setIsHistoryModalOpen] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        horizontal\r\n        horizontalAlign=\"space-between\"\r\n        tokens={{ childrenGap: 5 }}\r\n      >\r\n        <Stack tokens={{ childrenGap: 10 }}>\r\n          <Text variant=\"large\" style={{ fontWeight: \"bold\" }}>\r\n            #Round: {roundNumber}\r\n          </Text>\r\n          <Text variant=\"large\" style={{ fontWeight: \"bold\" }}>\r\n            Base coins: {baseCoins}\r\n          </Text>\r\n\r\n          <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 5 }}>\r\n            <TextField\r\n              placeholder=\"Add player\"\r\n              value={addPlayerValue}\r\n              onChange={(_, v) => setAddPlayerValue(v || \"\")}\r\n            ></TextField>\r\n            <DefaultButton\r\n              iconProps={{ iconName: \"add\" }}\r\n              disabled={!addPlayerValue}\r\n              onClick={() => {onAddPlayer(addPlayerValue);setAddPlayerValue('')}}\r\n            />\r\n          </Stack>\r\n            <TextField\r\n              label=\"All in value:\"\r\n              placeholder=\"set all in value\"\r\n              style={{ textAlign: \"center\", maxWidth: \"100px\" }}\r\n              value={allInCoins.toString()}\r\n              onChange={(_, v) => setAllInCoins(Number(v) || 0)}\r\n            />\r\n        </Stack>\r\n\r\n        <Stack verticalFill verticalAlign=\"end\" tokens={{ childrenGap: 5 }}>\r\n          <Text variant=\"large\" block style={{ textAlign: \"center\", fontWeight:'bold' }}>\r\n            POKER CALCULATOR\r\n          </Text>\r\n          <Button\r\n            text=\"History\"\r\n            onClick={_ => setIsHistoryModalOpen(true)}\r\n          />\r\n          <Modal\r\n            isOpen={isHistoryModalOpen}\r\n            onDismiss={() => setIsHistoryModalOpen(false)}\r\n          >\r\n            <HistoryModalTable\r\n              players={players}\r\n              playersHistory={historyItems}\r\n            ></HistoryModalTable>\r\n          </Modal>\r\n          <Text variant=\"large\" style={{ textAlign: \"center\" , fontWeight:'bold'}}>\r\n            {totalRoundCoins ? totalRoundCoins : \"0\"}\r\n          </Text>\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Stack,\r\n  Separator,\r\n} from \"office-ui-fabric-react\";\r\nimport { Player, ScoreBoard } from \"./ScoreBoard\";\r\nimport { Header, HistoryItem } from \"./Header\";\r\n\r\nconst startingCoins = 100000;\r\nexport const Game: React.FC = () => {\r\n  const [players, setPlayers] = useState<Player[]>([]);\r\n  const [totalRoundCoins, setTotalRoundCoins] = useState<number>(0);\r\n  const [baseCoins, setBaseCoins] = useState<number>(1000);\r\n  const [allInCoins, setAllInCoins] = useState<number>(9000);\r\n  const [roundNumber, setRoundNumber] = useState<number>(1);\r\n  const [historyItems, setHistoryItems] = useState<HistoryItem[]>([]);\r\n\r\n  const onAddPlayer = (name:string) => {\r\n    setPlayers(players =>\r\n      players.concat({\r\n        name: name,\r\n        coins: startingCoins,\r\n        isAllInClicked: false,\r\n        subtractedCoins: 0,\r\n        history: []\r\n      })\r\n    );\r\n  };\r\n\r\n  const onDelete = (name: String) => {\r\n    setPlayers(players => {\r\n      const items = players.slice();\r\n      items.splice(\r\n        players.findIndex(p => p.name === name),\r\n        1\r\n      );\r\n      return items;\r\n    });\r\n  };\r\n\r\n  const onSubtract = (name: string) => {\r\n    const updatedPlayers = players.slice();\r\n    const newPlayer = updatedPlayers.find(p => p.name === name);\r\n    if (newPlayer) {\r\n      newPlayer.coins -= baseCoins;\r\n      newPlayer.subtractedCoins -= baseCoins;\r\n    }\r\n    setPlayers(updatedPlayers);\r\n    setTotalRoundCoins(val => val + baseCoins);\r\n  };\r\n  const onAdd = (name: string) => {\r\n    const updatedPlayers = players.slice();\r\n    const newPlayer = updatedPlayers.find(p => p.name === name);\r\n    if (newPlayer) {\r\n      newPlayer.coins += baseCoins;\r\n      newPlayer.subtractedCoins += baseCoins;\r\n    }\r\n    setPlayers(updatedPlayers);\r\n    setTotalRoundCoins(val => val - baseCoins);\r\n  };\r\n  const onAllIn = (name: string) => {\r\n    const updatedPlayers = players.slice();\r\n    const newPlayer = updatedPlayers.find(p => p.name === name);\r\n    if (newPlayer) {\r\n      newPlayer.coins -= allInCoins;\r\n      newPlayer.isAllInClicked = true;\r\n      newPlayer.subtractedCoins -= allInCoins;\r\n    }\r\n    setPlayers(updatedPlayers);\r\n    setTotalRoundCoins(val => val + allInCoins);\r\n  };\r\n\r\n  const onPlayerWin = (name: string) => {\r\n    const updatedPlayers = players.slice();\r\n    const newPlayer = updatedPlayers.find(p => p.name === name);\r\n    if (newPlayer) {\r\n      newPlayer.coins += totalRoundCoins;\r\n    }\r\n    setPlayers(\r\n      updatedPlayers.map(p => ({\r\n        ...p,\r\n        history:\r\n          p.name === name\r\n            ? [...p.history, totalRoundCoins]\r\n            : [...p.history, p.subtractedCoins],\r\n        subtractedCoins: 0,\r\n        isAllInClicked: false\r\n      }))\r\n    );\r\n    const updatedHistory = historyItems.slice();\r\n    const historyObject: HistoryItem = {};\r\n    players.map(p => {\r\n      const key = p.name;\r\n      historyObject[key] = p.coins;\r\n    });\r\n    updatedHistory.push(historyObject);\r\n    setHistoryItems(updatedHistory);\r\n    setTotalRoundCoins(0);\r\n    setRoundNumber(n => n + 1);\r\n    if (roundNumber % 10 == 0) {\r\n      setBaseCoins(c => c * 2);\r\n      setAllInCoins(c => c * 2);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        onAddPlayer={onAddPlayer}\r\n        setAllInCoins={setAllInCoins}\r\n        totalRoundCoins={totalRoundCoins}\r\n        baseCoins={baseCoins}\r\n        roundNumber={roundNumber}\r\n        allInCoins={allInCoins}\r\n        historyItems={historyItems}\r\n        players={players}\r\n      />\r\n      <Separator />\r\n\r\n      <Stack tokens={{ childrenGap: 20 }} style={{ margin: \"15px\" }}>\r\n        <ScoreBoard\r\n          players={players}\r\n          onDelete={onDelete}\r\n          onSubtract={onSubtract}\r\n          onAdd={onAdd}\r\n          onAllIn={onAllIn}\r\n          onPlayerWin={onPlayerWin}\r\n        />\r\n      </Stack>\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Game } from \"./components/Game\";\n\nconst App: React.FC = () => {\n  return (<Game/>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\n\ninitializeIcons();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}