{"version":3,"sources":["components/ScoreBoard.tsx","components/HistoryModalTable.tsx","components/Header.tsx","components/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ScoreBoard","props","players","onDelete","onSubtract","onAdd","onAllIn","onPlayerWin","columns","key","name","fieldName","minWidth","isResizable","onRender","item","Stack","horizontal","verticalFill","horizontalAlign","verticalAlign","tokens","childrenGap","ActionButton","iconProps","iconName","onClick","_","Text","style","fontWeight","color","isKing","isCoze","variant","Separator","vertical","Icon","font","coins","subtractedCoins","disabled","isAllInClicked","text","DetailsList","isHeaderVisible","items","selectionMode","HistoryModalTable","playersHistory","map","p","length","textAlign","Header","onAddPlayer","onUndoRound","setAllInCoins","setBaseCoins","totalRoundCoins","baseCoins","roundNumber","allInCoins","historyItems","startingCoins","setStartingCoins","useState","addPlayerValue","setAddPlayerValue","isHistoryModalOpen","setIsHistoryModalOpen","TextField","placeholder","value","onChange","v","DefaultButton","label","maxWidth","toString","Number","block","Modal","isOpen","onDismiss","find","marginLeft","Game","setPlayers","setTotalRoundCoins","setRoundNumber","setHistoryItems","concat","history","n","updatedPlayers","slice","margin","splice","findIndex","newPlayer","val","player","highestCoinValue","reduce","acc","lowestCoinValue","Infinity","updatedHistory","historyObject","push","c","App","Boolean","window","location","hostname","match","initializeIcons","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1df0ad50.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  DetailsList,\r\n  IColumn,\r\n  ActionButton,\r\n  Icon,\r\n  Separator\r\n} from \"office-ui-fabric-react\";\r\n\r\nexport type Player = {\r\n  name: string;\r\n  coins: number;\r\n  subtractedCoins: number;\r\n  isAllInClicked?: boolean;\r\n  isKing?: boolean;\r\n  isCoze?: boolean;\r\n  history: number[];\r\n};\r\n\r\nexport type ScoreBoardProps = {\r\n  players: Player[];\r\n  onDelete: (name: string) => void;\r\n  onSubtract: (name: string) => void;\r\n  onAdd: (name: string) => void;\r\n  onAllIn: (name: string) => void;\r\n  onPlayerWin: (name: string) => void;\r\n};\r\n\r\nexport const ScoreBoard = (props: ScoreBoardProps) => {\r\n  const { players, onDelete, onSubtract, onAdd, onAllIn, onPlayerWin } = props;\r\n\r\n  const columns: IColumn[] = [\r\n    {\r\n      key: \"playerName\",\r\n      name: \"Name\",\r\n      fieldName: \"name\",\r\n      minWidth: 50,\r\n      isResizable: true,\r\n      onRender: (item: Player) => (\r\n        <Stack\r\n          horizontal\r\n          verticalFill\r\n          horizontalAlign=\"start\"\r\n          verticalAlign=\"center\"\r\n          tokens={{ childrenGap: 5 }}\r\n        >\r\n          <ActionButton\r\n            iconProps={{ iconName: \"Delete\" }}\r\n            onClick={_ => onDelete(item.name)}\r\n          />\r\n\r\n          <Text\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              color: item.isKing ? \"gold\" : item.isCoze ? \"red\" : \"black\"\r\n            }}\r\n            variant={item.isKing ? \"large\" : \"medium\"}\r\n          >\r\n            {item.name}\r\n          </Text>\r\n          <Separator vertical />\r\n          {item.isKing ? (\r\n            <Icon\r\n              iconName=\"Crown\"\r\n              style={{ color: \"gold\", fontWeight: \"bolder\" }}\r\n            />\r\n          ) : null}\r\n          {item.isCoze ? (\r\n            <Icon\r\n              iconName=\"Cat\"\r\n              style={{ color: \"red\", font: \"50px\", fontWeight: \"bolder\" }}\r\n            />\r\n          ) : null}\r\n        </Stack>\r\n      )\r\n    },\r\n    {\r\n      key: \"coin\",\r\n      name: \"Coins\",\r\n      fieldName: \"coins\",\r\n      minWidth: 150,\r\n      isResizable: true,\r\n      onRender: (item: any) => (\r\n        <Stack verticalFill verticalAlign=\"center\">\r\n          <Text>\r\n            {item.coins} ( {item.subtractedCoins} )\r\n          </Text>\r\n        </Stack>\r\n      )\r\n    },\r\n    {\r\n      key: \"icons\",\r\n      name: \"Icons\",\r\n      fieldName: \"icons\",\r\n      minWidth: 150,\r\n      isResizable: true,\r\n      onRender: (item: any) => (\r\n        <Stack\r\n          horizontal\r\n          tokens={{ childrenGap: 2 }}\r\n          horizontalAlign=\"start\"\r\n          verticalAlign=\"center\"\r\n          verticalFill\r\n        >\r\n          <ActionButton\r\n            iconProps={{ iconName: \"BoxSubtractSolid\" }}\r\n            onClick={_ => onSubtract(item.name)}\r\n          />\r\n          <ActionButton\r\n            iconProps={{ iconName: \"BoxAdditionSolid\" }}\r\n            onClick={_ => onAdd(item.name)}\r\n            disabled={item.subtractedCoins >= 0}\r\n          />\r\n          <ActionButton\r\n            iconProps={{ iconName: \"LightningBolt\" }}\r\n            onClick={_ => {\r\n              onAllIn(item.name);\r\n            }}\r\n            disabled={item.isAllInClicked}\r\n          />\r\n          <ActionButton\r\n            text=\"Win\"\r\n            style={{ color: \"green\" }}\r\n            onClick={_ => {\r\n              onPlayerWin(item.name);\r\n            }}\r\n            disabled={item.subtractedCoins < 0}\r\n          />\r\n        </Stack>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <DetailsList\r\n      isHeaderVisible={false}\r\n      items={players}\r\n      columns={columns}\r\n      selectionMode={0}\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { DetailsList, IColumn, Text } from \"office-ui-fabric-react\";\r\nimport { Player } from \"./ScoreBoard\";\r\nimport { HistoryItem } from \"./Header\";\r\n\r\nexport type HistoryModalTableProps = {\r\n  playersHistory: HistoryItem[];\r\n  players: Player[];\r\n};\r\n\r\nexport const HistoryModalTable = (props: HistoryModalTableProps) => {\r\n  const { playersHistory, players } = props;\r\n\r\n  const columns: IColumn[] = players.map(p => ({\r\n    key: p.name,\r\n    name: p.name,\r\n    fieldName: p.name,\r\n    minWidth: 100,\r\n    isResizable: true\r\n  }));\r\n\r\n  return playersHistory.length ? (\r\n    <DetailsList items={playersHistory} columns={columns} selectionMode={0} />\r\n  ) : (\r\n    <Text style={{ textAlign: \"center\", fontWeight: \"bold\" }} variant=\"large\">\r\n      {\" \"}\r\n      There is no history created yet!\r\n    </Text>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  ActionButton,\r\n  TextField,\r\n  DefaultButton,\r\n  Modal,\r\n  Button,\r\n  Icon,\r\n  Separator\r\n} from \"office-ui-fabric-react\";\r\nimport { HistoryModalTable } from \"./HistoryModalTable\";\r\nimport { Player } from \"./ScoreBoard\";\r\n\r\nexport type HistoryItem = { [key: string]: number };\r\nexport type HeaderProps = {\r\n  totalRoundCoins: number;\r\n  baseCoins: number;\r\n  roundNumber: number;\r\n  allInCoins: number;\r\n  players: Player[];\r\n  historyItems: HistoryItem[];\r\n  startingCoins: number;\r\n  onAddPlayer: (name: string) => void;\r\n  setAllInCoins: (val: number) => void;\r\n  setStartingCoins: (val: number) => void;\r\n  setBaseCoins: (val: number) => void;\r\n  onUndoRound: () => void;\r\n};\r\nexport const Header = (props: HeaderProps) => {\r\n  const {\r\n    onAddPlayer,\r\n    onUndoRound,\r\n    setAllInCoins,\r\n    setBaseCoins,\r\n    totalRoundCoins,\r\n    baseCoins,\r\n    roundNumber,\r\n    allInCoins,\r\n    players,\r\n    historyItems,\r\n    startingCoins,\r\n    setStartingCoins\r\n  } = props;\r\n  const [addPlayerValue, setAddPlayerValue] = useState(\"\");\r\n  const [isHistoryModalOpen, setIsHistoryModalOpen] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        horizontal\r\n        horizontalAlign=\"space-between\"\r\n        tokens={{ childrenGap: 5 }}\r\n      >\r\n        <Stack tokens={{ childrenGap: 10 }}>\r\n          <Text variant=\"large\" style={{ fontWeight: \"bold\" }}>\r\n            #Round: {roundNumber}\r\n          </Text>\r\n          <Text variant=\"large\" style={{ fontWeight: \"bold\" }}>\r\n            Base coins: {baseCoins}\r\n          </Text>\r\n\r\n          <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 5 }}>\r\n            <TextField\r\n              placeholder=\"Add player\"\r\n              value={addPlayerValue}\r\n              onChange={(_, v) => setAddPlayerValue(v || \"\")}\r\n            ></TextField>\r\n            <DefaultButton\r\n              iconProps={{ iconName: \"add\" }}\r\n              disabled={!addPlayerValue}\r\n              onClick={() => {\r\n                onAddPlayer(addPlayerValue);\r\n                setAddPlayerValue(\"\");\r\n              }}\r\n            />\r\n          </Stack>\r\n          <Stack horizontal>\r\n            <TextField\r\n              label=\"Initial\"\r\n              placeholder=\"set initial coins\"\r\n              style={{ textAlign: \"center\", maxWidth: \"100px\" }}\r\n              value={startingCoins.toString()}\r\n              onChange={(_, v) => setStartingCoins(Number(v) || 0)}\r\n            />\r\n            <TextField\r\n              label=\"Base\"\r\n              placeholder=\"set base coins\"\r\n              style={{ textAlign: \"center\", maxWidth: \"100px\" }}\r\n              value={baseCoins.toString()}\r\n              onChange={(_, v) => setBaseCoins(Number(v) || 0)}\r\n            />\r\n            <TextField\r\n              label=\"All in\"\r\n              placeholder=\"set all in value\"\r\n              style={{ textAlign: \"center\", maxWidth: \"100px\" }}\r\n              value={allInCoins.toString()}\r\n              onChange={(_, v) => setAllInCoins(Number(v) || 0)}\r\n            />\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack verticalFill verticalAlign=\"end\" tokens={{ childrenGap: 5 }}>\r\n          <Text\r\n            variant=\"large\"\r\n            block\r\n            style={{ textAlign: \"center\", fontWeight: \"bold\" }}\r\n          >\r\n            POKER CALCULATOR\r\n          </Text>\r\n          <Stack horizontal horizontalAlign=\"center\">\r\n            <ActionButton\r\n              iconProps={{ iconName: \"ClipboardListMirrored\" }}\r\n              text=\"History\"\r\n              onClick={_ => setIsHistoryModalOpen(true)}\r\n            />\r\n            <ActionButton\r\n              iconProps={{ iconName: \"Undo\" }}\r\n              text=\"Undo round\"\r\n              disabled={roundNumber === 1}\r\n              onClick={onUndoRound}\r\n            />\r\n          </Stack>\r\n          <Modal\r\n            isOpen={isHistoryModalOpen}\r\n            onDismiss={() => setIsHistoryModalOpen(false)}\r\n          >\r\n            <HistoryModalTable\r\n              players={players}\r\n              playersHistory={historyItems}\r\n            ></HistoryModalTable>\r\n          </Modal>\r\n          <Text\r\n            variant=\"large\"\r\n            style={{ textAlign: \"center\", fontWeight: \"bold\" }}\r\n          >\r\n            {totalRoundCoins ? totalRoundCoins : \"0\"}\r\n          </Text>\r\n\r\n          <Stack\r\n            verticalFill\r\n            horizontalAlign=\"center\"\r\n            verticalAlign=\"center\"\r\n            tokens={{ childrenGap: 5 }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"gold\"\r\n              }}\r\n              variant=\"medium\"\r\n            >\r\n              {players.find(p => p.isKing)?.name}\r\n              <Icon\r\n                iconName=\"Crown\"\r\n                style={{\r\n                  color: \"gold\",\r\n                  marginLeft: \"5px\",\r\n                  fontWeight: \"bolder\"\r\n                }}\r\n              />\r\n            </Text>\r\n            <Separator />\r\n            <Text\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"red\"\r\n              }}\r\n              variant=\"medium\"\r\n            >\r\n              {players.find(p => p.isCoze)?.name}\r\n              <Icon\r\n                iconName=\"Cat\"\r\n                style={{\r\n                  color: \"red\",\r\n                  marginLeft: \"5px\",\r\n                  font: \"50px\",\r\n                  fontWeight: \"bolder\"\r\n                }}\r\n              />\r\n            </Text>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Stack, Separator } from \"office-ui-fabric-react\";\r\nimport { Player, ScoreBoard } from \"./ScoreBoard\";\r\nimport { Header, HistoryItem } from \"./Header\";\r\n\r\nexport const Game: React.FC = () => {\r\n  const [players, setPlayers] = useState<Player[]>([]);\r\n  const [totalRoundCoins, setTotalRoundCoins] = useState<number>(0);\r\n  const [baseCoins, setBaseCoins] = useState<number>(1000);\r\n  const [startingCoins, setStartingCoins] = useState<number>(100000);\r\n  const [allInCoins, setAllInCoins] = useState<number>(9000);\r\n  const [roundNumber, setRoundNumber] = useState<number>(1);\r\n  const [historyItems, setHistoryItems] = useState<HistoryItem[]>([]);\r\n\r\n  const onAddPlayer = (name: string) => {\r\n    setPlayers(players =>\r\n      players.concat({\r\n        name: name,\r\n        coins: startingCoins,\r\n        isAllInClicked: false,\r\n        subtractedCoins: 0,\r\n        history: [],\r\n        isKing: false,\r\n        isCoze: false\r\n      })\r\n    );\r\n  };\r\n\r\n  const onDelete = (name: String) => {\r\n    setPlayers(players => {\r\n      const items = players.slice();\r\n      items.splice(\r\n        players.findIndex(p => p.name === name),\r\n        1\r\n      );\r\n      return items;\r\n    });\r\n  };\r\n\r\n  const onSubtract = (name: string) => {\r\n    const updatedPlayers = players.slice();\r\n    const newPlayer = updatedPlayers.find(p => p.name === name);\r\n    if (newPlayer) {\r\n      newPlayer.coins -= baseCoins;\r\n      newPlayer.subtractedCoins -= baseCoins;\r\n    }\r\n    setPlayers(updatedPlayers);\r\n    setTotalRoundCoins(val => val + baseCoins);\r\n  };\r\n  const onAdd = (name: string) => {\r\n    const updatedPlayers = players.slice();\r\n    const newPlayer = updatedPlayers.find(p => p.name === name);\r\n    if (newPlayer) {\r\n      newPlayer.coins += baseCoins;\r\n      newPlayer.subtractedCoins += baseCoins;\r\n    }\r\n    setPlayers(updatedPlayers);\r\n    setTotalRoundCoins(val => val - baseCoins);\r\n  };\r\n\r\n  const onUndoRound = () => {\r\n    if (roundNumber === 1) {\r\n      return;\r\n    }\r\n    setRoundNumber(n => n - 1);\r\n    const updatedPlayers = players.map(p => ({\r\n      ...p,\r\n      history: p.history.slice(0, -1),\r\n      subtractedCoins: 0\r\n    }));\r\n    setPlayers(updatedPlayers);\r\n    setHistoryItems(items => items.slice(0, -1));\r\n  };\r\n\r\n  const onAllIn = (name: string) => {\r\n    const updatedPlayers = players.slice();\r\n    const newPlayer = updatedPlayers.find(p => p.name === name);\r\n    if (newPlayer) {\r\n      if (newPlayer.coins < allInCoins) {\r\n        newPlayer.subtractedCoins -= newPlayer.coins;\r\n        setTotalRoundCoins(val => val + newPlayer.coins);\r\n        newPlayer.coins = 0;\r\n      } else {\r\n        newPlayer.coins -= allInCoins;\r\n        newPlayer.subtractedCoins -= allInCoins;\r\n        setTotalRoundCoins(val => val + allInCoins);\r\n      }\r\n      newPlayer.isAllInClicked = true;\r\n    }\r\n    setPlayers(updatedPlayers);\r\n  };\r\n\r\n  const onPlayerWin = (name: string) => {\r\n    const updatedPlayers = players.slice();\r\n    const player = updatedPlayers.find(p => p.name === name);\r\n    if (player) {\r\n      player.coins += totalRoundCoins;\r\n    }\r\n    const highestCoinValue = players.reduce(\r\n      (acc, player) => (acc = acc > player.coins ? acc : player.coins),\r\n      0\r\n    );\r\n    const lowestCoinValue = players.reduce(\r\n      (acc, player) => (acc = acc < player.coins ? acc : player.coins),\r\n      Infinity\r\n    );\r\n    setPlayers(\r\n      updatedPlayers.map(p => ({\r\n        ...p,\r\n        history:\r\n          p.name === name\r\n            ? [...p.history, totalRoundCoins]\r\n            : [...p.history, p.subtractedCoins],\r\n        subtractedCoins: 0,\r\n        isAllInClicked: false,\r\n        isKing: p.coins === highestCoinValue,\r\n        isCoze: p.coins === lowestCoinValue\r\n      }))\r\n    );\r\n    const updatedHistory = historyItems.slice();\r\n    const historyObject: HistoryItem = {};\r\n    players.map(p => {\r\n      const key = p.name;\r\n      historyObject[key] = p.coins;\r\n    });\r\n    updatedHistory.push(historyObject);\r\n    setHistoryItems(updatedHistory);\r\n    setTotalRoundCoins(0);\r\n    setRoundNumber(n => n + 1);\r\n    if (roundNumber % 10 == 0) {\r\n      setBaseCoins(c => c * 2);\r\n      setAllInCoins(c => c * 2);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        startingCoins={startingCoins}\r\n        setStartingCoins={setStartingCoins}\r\n        onAddPlayer={onAddPlayer}\r\n        onUndoRound={onUndoRound}\r\n        setAllInCoins={setAllInCoins}\r\n        totalRoundCoins={totalRoundCoins}\r\n        baseCoins={baseCoins}\r\n        roundNumber={roundNumber}\r\n        allInCoins={allInCoins}\r\n        historyItems={historyItems}\r\n        setBaseCoins={setBaseCoins}\r\n        players={players}\r\n      />\r\n      <Separator />\r\n\r\n      <Stack tokens={{ childrenGap: 20 }} style={{ margin: \"15px\" }}>\r\n        <ScoreBoard\r\n          players={players}\r\n          onDelete={onDelete}\r\n          onSubtract={onSubtract}\r\n          onAdd={onAdd}\r\n          onAllIn={onAllIn}\r\n          onPlayerWin={onPlayerWin}\r\n        />\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Game } from \"./components/Game\";\n\nconst App: React.FC = () => {\n  return (<Game/>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\n\ninitializeIcons();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}